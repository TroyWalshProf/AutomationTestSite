{"version":3,"file":"component---src-pages-departments-details-[id]-tsx-036e4ca850233bca1b19.js","mappings":"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","sources":["webpack://@cognizant-softvision/automation-test-site/./src/hooks/department-hooks.ts","webpack://@cognizant-softvision/automation-test-site/./src/hooks/state-hooks.ts","webpack://@cognizant-softvision/automation-test-site/./src/hooks/employee-hooks.ts","webpack://@cognizant-softvision/automation-test-site/./src/pages/Departments/Details/[id].tsx"],"sourcesContent":["import { useApplicationState, setApplicationState } from \"./context-hooks\";\r\n\r\nconst getDepartments = () => {\r\n    const state = useApplicationState();\r\n\r\n    return state.departments;\r\n}\r\n\r\nconst useGetDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number) => {\r\n        return state.departments.find(department => department.id == id);\r\n    } \r\n}\r\n\r\nconst useCreateDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (department: any) => {\r\n        // TODO: Generate UUID\r\n        department.id = -1;\r\n        const newState = {...state};\r\n        newState.departments.push(department);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nconst useDeleteDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number) => {\r\n        const newState = {...state};\r\n        newState.departments.splice(newState.departments.findIndex(dept => dept.id == id), 1);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nconst useEditDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number, department: any) => {\r\n        const newState = {...state};\r\n        const index = newState.departments.findIndex(dept => dept.id == id);\r\n        newState.departments[index] = Object.assign(newState.departments[index], department);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nexport { getDepartments, useGetDepartment, useCreateDepartment, useDeleteDepartment, useEditDepartment };","import { useApplicationState, setApplicationState } from \"./context-hooks\";\r\n\r\nconst getStates = () => {\r\n    const state = useApplicationState();\r\n\r\n    return state.states;\r\n}\r\n\r\nconst useGetState = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number) => {\r\n        return state.states.find(stateLoc => stateLoc.id == id);\r\n    } \r\n}\r\n\r\nexport { getStates, useGetState };","import { useApplicationState, setApplicationState } from \"./context-hooks\";\r\nimport { useGetDepartment } from \"./department-hooks\";\r\nimport { useGetState } from \"./state-hooks\";\r\n\r\nconst getEmployees = () => {\r\n    const state = useApplicationState();\r\n    const getState = useGetState();\r\n    const getDepartment = useGetDepartment();\r\n\r\n    return state.employees.map(employee => {\r\n        employee.state = getState(employee.stateId)?.state;\r\n        employee.department = getDepartment(employee.departmentId)?.department;\r\n        return employee;\r\n    });\r\n}\r\n\r\nconst useGetEmployee = () => {\r\n    const state = useApplicationState();\r\n    const getState = useGetState();\r\n    const getDepartment = useGetDepartment();\r\n\r\n    return (id: number) => {\r\n        let employee = state.employees.find(empl => empl.id == id);\r\n        employee.state = getState(employee.stateId).state;\r\n        employee.department = getDepartment(employee.departmentId).department;\r\n        return employee;\r\n    } \r\n}\r\n\r\nconst useCreateEmployee = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (employee: any) => {\r\n        // TODO: Generate UUID\r\n        employee.id = -1;\r\n        const newState = {...state};\r\n        newState.employees.push(employee);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nconst useDeleteEmployee = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number) => {\r\n        const newState = {...state};\r\n        newState.employees.splice(newState.employees.findIndex(empl => empl.id == id), 1);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nconst useEditEmployee = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number, employee: any) => {\r\n        const newState = {...state};\r\n        const index = newState.employees.findIndex(empl => empl.id == id);\r\n        newState.employees[index] = Object.assign(newState.employees[index], employee);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nexport { getEmployees, useCreateEmployee, useDeleteEmployee, useGetEmployee, useEditEmployee };","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"gatsby\";\nimport { Layout } from \"../../../components/shared/layout\";\nimport { getEmployees } from \"../../../hooks/employee-hooks\";\nimport { useGetDepartment } from \"../../../hooks/department-hooks\";\n\nconst Details = (props: any) => {\n  const DetailsInner = (props: any) => {\n    const [employees, setEmployees] = useState<any[]>(undefined);\n    const [id, setId] = useState<number>(undefined);\n    const [department, setDepartment] = useState<any>(undefined);\n    const allEmployees = getEmployees();\n    const getDepartment = useGetDepartment();\n\n    useEffect(() => {\n      const queryId = props.id;\n      setId(queryId);\n      setDepartment(getDepartment(queryId));\n      setEmployees(\n        allEmployees.filter((employee) => (employee.departmentId = queryId))\n      );\n    }, []);\n\n    return (\n      <React.Fragment>\n        <h2>{!!department ? department.department : \"\"}</h2>\n\n        <div>\n          <h1>Employees</h1>\n          {!!employees ? (\n            <table className=\"table\">\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>City</th>\n                <th>Department</th>\n                <th>State</th>\n                <th>Address</th>\n              </tr>\n              {!!employees &&\n                employees.map((employee) => {\n                  return (\n                    <tr>\n                      <td>{employee.firstName}</td>\n                      <td>{employee.lastName}</td>\n                      <td>{employee.city}</td>\n                      <td>{employee.department}</td>\n                      <td>{employee.state}</td>\n                      <td>{employee.address}</td>\n                    </tr>\n                  );\n                })}\n            </table>\n          ) : (\n            <h1>No data</h1>\n          )}\n        </div>\n\n        <p>\n          <Link to={`/Departments/Edit?id=${id}`}>Edit</Link>|\n          <Link to=\"/Departments\">Back to List</Link>\n        </p>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Layout title=\"Details\">\n      <DetailsInner id={props.params.id} />\n    </Layout>\n  );\n};\n\nexport default Details;\n"],"names":["getDepartments","useApplicationState","departments","useGetDepartment","state","id","find","department","useCreateDepartment","newState","push","setApplicationState","useDeleteDepartment","splice","findIndex","dept","useEditDepartment","index","Object","assign","useGetState","states","stateLoc","getEmployees","getState","getDepartment","employees","map","employee","stateId","departmentId","useGetEmployee","empl","useCreateEmployee","useDeleteEmployee","useEditEmployee","props","DetailsInner","useState","undefined","setEmployees","setId","setDepartment","allEmployees","useEffect","queryId","filter","className","firstName","lastName","city","address","to","title","params"],"sourceRoot":""}