{"version":3,"file":"component---src-pages-departments-edit-[id]-tsx-8581e696349c0a27d190.js","mappings":"4TAEMA,EAAiB,WAGnB,OAFcC,EAAAA,EAAAA,MAEDC,aAGXC,EAAmB,WACrB,IAAMC,GAAQH,EAAAA,EAAAA,MAEd,OAAO,SAACI,GACJ,OAAOD,EAAMF,YAAYI,MAAK,SAAAC,GAAU,OAAIA,EAAWF,IAAMA,OAI/DG,EAAsB,WACxB,IAAMJ,GAAQH,EAAAA,EAAAA,MAEd,OAAO,SAACM,GAEJA,EAAWF,IAAM,EACjB,IAAMI,EAAQ,iBAAOL,GACrBK,EAASP,YAAYQ,KAAKH,IAE1BI,EAAAA,EAAAA,IAAoBF,KAItBG,EAAsB,WACxB,IAAMR,GAAQH,EAAAA,EAAAA,MAEd,OAAO,SAACI,GACJ,IAAMI,EAAQ,iBAAOL,GACrBK,EAASP,YAAYW,OAAOJ,EAASP,YAAYY,WAAU,SAAAC,GAAI,OAAIA,EAAKV,IAAMA,KAAK,IAEnFM,EAAAA,EAAAA,IAAoBF,KAItBO,EAAoB,WACtB,IAAMZ,GAAQH,EAAAA,EAAAA,MAEd,OAAO,SAACI,EAAYE,GAChB,IAAME,EAAQ,iBAAOL,GACfa,EAAQR,EAASP,YAAYY,WAAU,SAAAC,GAAI,OAAIA,EAAKV,IAAMA,KAChEI,EAASP,YAAYe,GAASC,OAAOC,OAAOV,EAASP,YAAYe,GAAQV,IAEzEI,EAAAA,EAAAA,IAAoBF,M,wEC+D5B,UAvGa,SAACW,GACZ,IAAMC,EAAY,SAACD,GACjB,OAAkCE,EAAAA,EAAAA,eAASC,GAAtChB,EAAL,KAAiBiB,EAAjB,KACA,GAAoBF,EAAAA,EAAAA,eAAiBC,GAA9BlB,EAAP,KAAWoB,EAAX,KACMC,GAAgBvB,EAAAA,EAAAA,MAChBwB,GAAiBX,EAAAA,EAAAA,MAQvB,OANAY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUT,EAAMf,GACtBoB,EAAMI,GACNL,EAAcE,EAAcG,MAC3B,IAGD,gBAAC,WAAD,KACE,kCAEA,wBACEC,OAAO,yBACPC,OAAO,OACPC,WAAW,eAGT,EASF,uBAAKC,UAAU,mBACb,wCACA,2BAEA,yBACE,WAAS,OACT,kBAAgB,2CAChB,oBAAkB,sCAClB5B,GAAG,eACH6B,KAAK,eACLC,KAAK,SACLC,MAAO7B,EAAaA,EAAWF,IAAM,IAGvC,uBAAK4B,UAAU,cACb,yBAAOA,UAAU,yBAAyBI,IAAI,kBAA9C,cAGA,uBAAKJ,UAAU,aACb,yBACEA,UAAU,oCACV,WAAS,OACT,oBAAkB,oCAClB5B,GAAG,iBACH6B,KAAK,iBACLC,KAAK,OACLC,MAAO7B,EAAaA,EAAWA,WAAa,GAC5C+B,SAAU,SAACC,GACT,IAAIC,EAAgB,OAAH,UAAQjC,GACzBiC,EAAcjC,WAAagC,EAAME,OAAOL,MACxCZ,EAAcgB,MAGlB,wBACEP,UAAU,qCACV,kBAAgB,iBAChB,sBAAoB,WAK1B,uBAAKA,UAAU,cACb,uBAAKA,UAAU,6BACb,yBACEE,KAAK,SACLO,QAAS,WACPf,EAAetB,EAAIE,IACnBoC,EAAAA,EAAAA,IAAS,kBAEXP,MAAM,OACNH,UAAU,wBAOpB,2BACE,gBAAC,KAAD,CAAMW,GAAG,gBAAT,mBAMR,OACE,gBAAC,IAAD,CAAQC,MAAM,QACZ,gBAACxB,EAAD,CAAWhB,GAAIe,EAAM0B,OAAOzC","sources":["webpack://@cognizant-softvision/automation-test-site/./src/hooks/department-hooks.ts","webpack://@cognizant-softvision/automation-test-site/./src/pages/Departments/Edit/[id].tsx"],"sourcesContent":["import { useApplicationState, setApplicationState } from \"./context-hooks\";\r\n\r\nconst getDepartments = () => {\r\n    const state = useApplicationState();\r\n\r\n    return state.departments;\r\n}\r\n\r\nconst useGetDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number) => {\r\n        return state.departments.find(department => department.id == id);\r\n    } \r\n}\r\n\r\nconst useCreateDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (department: any) => {\r\n        // TODO: Generate UUID\r\n        department.id = -1;\r\n        const newState = {...state};\r\n        newState.departments.push(department);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nconst useDeleteDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number) => {\r\n        const newState = {...state};\r\n        newState.departments.splice(newState.departments.findIndex(dept => dept.id == id), 1);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nconst useEditDepartment = () => {\r\n    const state = useApplicationState();\r\n\r\n    return (id: number, department: any) => {\r\n        const newState = {...state};\r\n        const index = newState.departments.findIndex(dept => dept.id == id);\r\n        newState.departments[index] = Object.assign(newState.departments[index], department);\r\n\r\n        setApplicationState(newState);\r\n    }\r\n}\r\n\r\nexport { getDepartments, useGetDepartment, useCreateDepartment, useDeleteDepartment, useEditDepartment };","import { navigate, Link } from \"gatsby\";\nimport React, { useEffect, useState } from \"react\";\nimport { Layout } from \"../../../components/shared/layout\";\nimport {\n  useEditDepartment,\n  useGetDepartment,\n} from \"../../../hooks/department-hooks\";\n\nconst Edit = (props: any) => {\n  const EditInner = (props: any) => {\n    let [department, setDepartment] = useState(undefined);\n    const [id, setId] = useState<number>(undefined);\n    const getDepartment = useGetDepartment();\n    const editDepartment = useEditDepartment();\n\n    useEffect(() => {\n      const queryId = props.id;\n      setId(queryId);\n      setDepartment(getDepartment(queryId));\n    }, []);\n\n    return (\n      <React.Fragment>\n        <h2>Edit</h2>\n\n        <form\n          action=\"/Departments/Edit/1754\"\n          method=\"post\"\n          novalidate=\"novalidate\"\n        >\n          {\n            false && (\n              <input\n                name=\"__RequestVerificationToken\"\n                type=\"hidden\"\n                value=\"ENvsqL2FNrnZss40ySe9RPx1O5Em961LrYKCp_YaVqBZw2PZSO7dfnBhNV7Pp0rAH0ow0QqzKX9EC8hLpwNzTLUROIy08ecapRsv6-PTdX81\"\n              />\n            )\n            /* I am assuming this is no longer needed. */\n          }\n          <div className=\"form-horizontal\">\n            <h4>Department</h4>\n            <hr />\n\n            <input\n              data-val=\"true\"\n              data-val-number=\"The field DepartmentID must be a number.\"\n              data-val-required=\"The DepartmentID field is required.\"\n              id=\"DepartmentID\"\n              name=\"DepartmentID\"\n              type=\"hidden\"\n              value={department ? department.id : -1}\n            />\n\n            <div className=\"form-group\">\n              <label className=\"control-label col-md-2\" for=\"DepartmentName\">\n                Department\n              </label>\n              <div className=\"col-md-10\">\n                <input\n                  className=\"form-control text-box single-line\"\n                  data-val=\"true\"\n                  data-val-required=\"The Department field is required.\"\n                  id=\"DepartmentName\"\n                  name=\"DepartmentName\"\n                  type=\"text\"\n                  value={department ? department.department : \"\"}\n                  onChange={(event) => {\n                    let newDepartment = { ...department };\n                    newDepartment.department = event.target.value;\n                    setDepartment(newDepartment);\n                  }}\n                />\n                <span\n                  className=\"field-validation-valid text-danger\"\n                  data-valmsg-for=\"DepartmentName\"\n                  data-valmsg-replace=\"true\"\n                ></span>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"col-md-offset-2 col-md-10\">\n                <input\n                  type=\"submit\"\n                  onClick={() => {\n                    editDepartment(id, department);\n                    navigate(\"/Departments/\");\n                  }}\n                  value=\"Save\"\n                  className=\"btn btn-default\"\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n\n        <div>\n          <Link to=\"/Departments\">Back to List</Link>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Layout title=\"Edit\">\n      <EditInner id={props.params.id} />\n    </Layout>\n  );\n};\n\nexport default Edit;\n"],"names":["getDepartments","useApplicationState","departments","useGetDepartment","state","id","find","department","useCreateDepartment","newState","push","setApplicationState","useDeleteDepartment","splice","findIndex","dept","useEditDepartment","index","Object","assign","props","EditInner","useState","undefined","setDepartment","setId","getDepartment","editDepartment","useEffect","queryId","action","method","novalidate","className","name","type","value","for","onChange","event","newDepartment","target","onClick","navigate","to","title","params"],"sourceRoot":""}