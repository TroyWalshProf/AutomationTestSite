{"version":3,"file":"component---src-pages-manage-manage-logins-tsx-725af9f86ed92f5199f5.js","mappings":"4MAgFA,UA7EqB,SAACA,GACpB,IAAmBC,EAmEnB,OACE,gBAAC,IAAD,CAAQC,KAAK,+BACX,8CArEeD,GAsEJ,GAnET,2BACE,yFACgE,IAC9D,qBAAGE,KAAK,iDAAR,gBAFF,oGAUMF,EAgCR,uBAAKG,GAAG,mBACN,sFAGI,0BACEC,KAAK,SACLC,UAAU,kBACVF,GAAG,wBACHF,KAAK,WACLK,MAAM,wBACNC,MAAM,wCANR,2BAlCN,gBAACC,IAAIC,QAAL,KACE,+CACA,yBAAOJ,UAAU,SACf,4EAEE,0BACE,mDACA,iIAIE,iIAGE,yBACED,KAAK,SACLC,UAAU,kBACVC,MAAM,SACNC,MAAM,gEAXZ,gBAgDV,qBAAGF,UAAU,gBAAb","sources":["webpack://@cognizant-softvision/automation-test-site/./src/pages/Manage/ManageLogins.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Layout } from \"../../components/shared/layout\";\n\nconst ManageLogins = (props: any) => {\n  const getInline = (input) => {\n    if (input) {\n      return (\n        <div>\n          <p>\n            There are no external authentication services configured. See{\" \"}\n            <a href=\"http://go.microsoft.com/fwlink/?LinkId=313242\">\n              this article\n            </a>\n            for details on setting up this ASP.NET application to support\n            logging in via external services.\n          </p>\n        </div>\n      );\n    } else if (!input) {\n      return (\n        <JSX.Element>\n          <h4>Registered Logins</h4>\n          <table className=\"table\">\n            <tbody>\n              foreach (var account in Model.CurrentLogins)\n              <tr>\n                <td>account.LoginProvider</td>\n                <td>\n                  if (ViewBag.ShowRemoveButton)\n                  using(Html.BeginForm(\"RemoveLogin\", \"Manage\"))\n                  Html.AntiForgeryToken()\n                  <div>\n                    Html.Hidden(\"loginProvider\", account.LoginProvider)\n                    Html.Hidden(\"providerKey\", account.ProviderKey)\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-default\"\n                      value=\"Remove\"\n                      title=\"Remove this @account.LoginProvider login from your account\"\n                    />\n                  </div>\n                  else : &nbsp;\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </JSX.Element>\n      );\n    } else {\n      return (\n        <div id=\"socialLoginList\">\n          <p>\n            foreach (AuthenticationDescription p in Model.OtherLogins)\n            {\n              <button\n                type=\"submit\"\n                className=\"btn btn-default\"\n                id=\"@p.AuthenticationType\"\n                name=\"provider\"\n                value=\"@p.AuthenticationType\"\n                title=\"Log in using your @p.Caption account\"\n              >\n                @p.AuthenticationType\n              </button>\n            }\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Layout name=\"Manage your external logins\">\n      <h2>@ViewBag.Title.</h2>\n      {getInline(true)}\n      <p className=\"text-success\">ViewBag.StatusMessage</p>\n    </Layout>\n  );\n};\n\nexport default ManageLogins;\n"],"names":["props","input","name","href","id","type","className","value","title","JSX","Element"],"sourceRoot":""}